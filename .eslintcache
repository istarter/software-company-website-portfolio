[{"/Users/najib/Cloud-Native/bootcamp2020/React-Material-UI/techtron/src/index.js":"1","/Users/najib/Cloud-Native/bootcamp2020/React-Material-UI/techtron/src/App.js":"2","/Users/najib/Cloud-Native/bootcamp2020/React-Material-UI/techtron/src/components/routing/MainRoute.js":"3","/Users/najib/Cloud-Native/bootcamp2020/React-Material-UI/techtron/src/components/ui/Header.js":"4","/Users/najib/Cloud-Native/bootcamp2020/React-Material-UI/techtron/src/components/ui/Theme.js":"5","/Users/najib/Cloud-Native/bootcamp2020/React-Material-UI/techtron/src/reportWebVitals.js":"6","/Users/najib/Cloud-Native/bootcamp2020/React-Material-UI/techtron/src/components/ui/footer/LetsTalk.js":"7","/Users/najib/Cloud-Native/bootcamp2020/React-Material-UI/techtron/src/components/ui/footer/Footer.js":"8","/Users/najib/Cloud-Native/bootcamp2020/React-Material-UI/techtron/src/pages/Home.js":"9","/Users/najib/Cloud-Native/bootcamp2020/React-Material-UI/techtron/src/components/ui/HomePage/HeroSection.js":"10","/Users/najib/Cloud-Native/bootcamp2020/React-Material-UI/techtron/src/components/ui/HomePage/HeroSliderLanguges.js":"11"},{"size":500,"mtime":1608023129288,"results":"12","hashOfConfig":"13"},{"size":148,"mtime":1608031605036,"results":"14","hashOfConfig":"13"},{"size":5265,"mtime":1608810007967,"results":"15","hashOfConfig":"13"},{"size":23410,"mtime":1608554088045,"results":"16","hashOfConfig":"13"},{"size":2674,"mtime":1608553904727,"results":"17","hashOfConfig":"13"},{"size":362,"mtime":1608023129289,"results":"18","hashOfConfig":"13"},{"size":4962,"mtime":1608792791904,"results":"19","hashOfConfig":"13"},{"size":10453,"mtime":1608792030879,"results":"20","hashOfConfig":"13"},{"size":766,"mtime":1608811302776,"results":"21","hashOfConfig":"13"},{"size":2293,"mtime":1609320324510,"results":"22","hashOfConfig":"13"},{"size":2696,"mtime":1609320009525,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"b64rqx",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/najib/Cloud-Native/bootcamp2020/React-Material-UI/techtron/src/index.js",[],["50","51"],"/Users/najib/Cloud-Native/bootcamp2020/React-Material-UI/techtron/src/App.js",[],["52","53"],"/Users/najib/Cloud-Native/bootcamp2020/React-Material-UI/techtron/src/components/routing/MainRoute.js",[],"/Users/najib/Cloud-Native/bootcamp2020/React-Material-UI/techtron/src/components/ui/Header.js",["54","55"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { useTheme, fade } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport {\n  Grid,\n  Typography,\n  AppBar,\n  Toolbar,\n  useScrollTrigger,\n  Tabs,\n  Tab,\n  Button,\n  Menu,\n  MenuItem,\n  useMediaQuery,\n  SwipeableDrawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  Avatar,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n} from \"@material-ui/core\";\n\nimport logo from \"../../assets/logo.svg\";\nimport englishFlage from \"../../assets/images/usa.png\";\nimport swedenFlage from \"../../assets/images/sweden.png\";\n\nfunction ElevationScroll(props) {\n  const { children } = props;\n\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n\nconst useStyles = makeStyles((theme) => ({\n  toolbarMargin: {\n    ...theme.mixins.toolbar,\n    marginBottom: \"3em\",\n    [theme.breakpoints.down(\"md\")]: {\n      marginBottom: \"2em\",\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      marginBottom: \"1.2em\",\n    },\n  },\n  logo: {\n    height: \"3em\",\n    marginLeft: \"3em\",\n    [theme.breakpoints.down(\"md\")]: {\n      height: \"3em\",\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      height: \"3em\",\n    },\n  },\n  logoContainer: {\n    padding: 0,\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  tabContainer: {\n    marginLeft: \"auto\",\n  },\n  tab: {\n    ...theme.typography.tab,\n    minWidth: 12,\n    marginLeft: \"2px\",\n  },\n  searchTab: {\n    ...theme.typography.tab,\n    minWidth: 12,\n    maxWidth: \"10em\",\n    marginLeft: 0,\n    border: \"solid\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n  },\n  flage: {\n    ...theme.typography.tab,\n    // minWidth: 10,\n    // maxWidth: 10,\n    marginLeft: 5,\n  },\n  button: {\n    ...theme.typography.estimate,\n    marginLeft: \"50px\",\n    marginRight: \"25px\",\n    borderRadius: \"50px\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.secondary.light,\n    },\n  },\n  menu: {\n    backgroundColor: theme.palette.common.white,\n    color: \"white\",\n    borderRadius: \"0px\",\n    marginTop: \"5em\",\n  },\n  menuItem: {\n    ...theme.typography.tab,\n    opacity: 0.7,\n    \"&:hover\": {\n      opacity: 1,\n    },\n    color: \"black\",\n  },\n  menuGrid: {\n    marginLeft: \"3em\",\n    marginBottom: \"2em\",\n  },\n  drawerIcon: {\n    height: \"40px\",\n    width: \"40px\",\n  },\n  drawerIconContainer: {\n    marginLeft: \"auto\",\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  drawer: {\n    backgroundColor: theme.palette.common.blue,\n  },\n  drawerItem: {\n    ...theme.typography.tab,\n    color: \"white\",\n    opacity: 0.7,\n  },\n  drawerItemEstimate: {\n    backgroundColor: theme.palette.common.orange,\n  },\n  drawerItemSelected: {\n    \"& .MuiListItemText-root\": {\n      opacity: 1,\n    },\n  },\n  appbar: {\n    zIndex: theme.zIndex.modal + 1,\n  },\n  tabMenuItem: {\n    marginBottom: \"0.5em\",\n  },\n  contactBtn: {\n    display: \"inline-block\",\n    border: \"solid\",\n    borderWidth: 1,\n    borderColor: \"#5d5143\",\n    paddingTop: 8,\n    paddingBottom: 8,\n    paddingLeft: 40,\n    paddingRight: 40,\n    color: \"#5d5143\",\n    borderRadius: 3,\n    \"&:hover\": {\n      backgroundColor: \"#5d5143\",\n      color: \"#fff\",\n    },\n  },\n}));\n\nexport default function Header({\n  value,\n  setValue,\n  selectedIndex,\n  setSelectedIndex,\n}) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.down(\"md\"));\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n\n  const [anchorEl, setAnchorEl] = useState();\n  const [anchorTechEl, setAnchorTechEl] = useState();\n  const [openMenu, setOpenMenu] = useState(false);\n  const [openTechMenu, setOpenTechMenu] = useState(false);\n  const [openDrawer, setOpenDrawer] = useState(false);\n\n  const menuOptions = [\n    {\n      name: \"Web Application Development\",\n      link: \"/web-development\",\n      activeIndex: 1,\n      selectedIndex: 0,\n      variant: \"h4\",\n    },\n    {\n      name: \"Software Development\",\n      link: \"/software-development\",\n      activeIndex: 1,\n      selectedIndex: 1,\n      variant: \"h4\",\n    },\n    {\n      name: \"Mobile Development\",\n      link: \"/mobile-development\",\n      activeIndex: 1,\n      selectedIndex: 2,\n      variant: \"h4\",\n    },\n    {\n      name: \"iOS App Development\",\n      link: \"/ios-development\",\n      activeIndex: 1,\n      selectedIndex: 4,\n      variant: \"body1\",\n    },\n    {\n      name: \"Android App Development\",\n      link: \"/android-development\",\n      activeIndex: 1,\n      selectedIndex: 5,\n      variant: \"body1\",\n    },\n  ];\n\n  const menuUIOptions = [\n    {\n      name: \"UI/UX DESIGN\",\n      link: \"/ui-ux-design\",\n      activeIndex: 1,\n      selectedIndex: 6,\n      variant: \"h4\",\n    },\n    {\n      name: \"UI/UX DESIGN\",\n      link: \"/ui-ux-design\",\n      activeIndex: 1,\n      selectedIndex: 7,\n      variant: \"body1\",\n    },\n    {\n      name: \"EMAIL DESIGN\",\n      link: \"/email-design\",\n      activeIndex: 1,\n      selectedIndex: 8,\n      variant: \"body1\",\n    },\n    {\n      name: \"GRAPHIC DESIGN\",\n      link: \"/graphic-design\",\n      activeIndex: 1,\n      selectedIndex: 9,\n      variant: \"body1\",\n    },\n    {\n      name: \"WEB DESIGN\",\n      link: \"/web-design\",\n      activeIndex: 1,\n      selectedIndex: 10,\n      variant: \"body1\",\n    },\n  ];\n\n  const menuQAOptions = [\n    {\n      name: \"QA & Testing\",\n      link: \"/QA-testing\",\n      activeIndex: 1,\n      selectedIndex: 11,\n      variant: \"h4\",\n    },\n    {\n      name: \"iOS App Testing\",\n      link: \"/ios-testing\",\n      activeIndex: 1,\n      selectedIndex: 12,\n      variant: \"body1\",\n    },\n    {\n      name: \"Android App Testing\",\n      link: \"/android-testing\",\n      activeIndex: 1,\n      selectedIndex: 13,\n      variant: \"body1\",\n    },\n    {\n      name: \"Web App Testing\",\n      link: \"/web-testing\",\n      activeIndex: 1,\n      selectedIndex: 14,\n      variant: \"body1\",\n    },\n    {\n      name: \"Mobile App Testing\",\n      link: \"/mobile-app-testing\",\n      activeIndex: 1,\n      selectedIndex: 15,\n      variant: \"body1\",\n    },\n    {\n      name: \"Software Testing\",\n      link: \"/software-testing\",\n      activeIndex: 1,\n      selectedIndex: 16,\n      variant: \"body1\",\n    },\n  ];\n\n  const menuConsultingOptions = [\n    {\n      name: \"Consulting\",\n      link: \"/android-development\",\n      activeIndex: 1,\n      selectedIndex: 17,\n      variant: \"h4\",\n    },\n    {\n      name: \"Software Development Consulting\",\n      link: \"/android-development\",\n      activeIndex: 1,\n      selectedIndex: 18,\n      variant: \"body1\",\n    },\n    {\n      name: \"Web Development Consulting\",\n      link: \"/android-development\",\n      activeIndex: 1,\n      selectedIndex: 19,\n      variant: \"body1\",\n    },\n    {\n      name: \"Mobile App Development Consulting\",\n      link: \"/android-development\",\n      activeIndex: 1,\n      selectedIndex: 20,\n      variant: \"body1\",\n    },\n    {\n      name: \"Design Consulting\",\n      link: \"/android-development\",\n      activeIndex: 1,\n      selectedIndex: 18,\n      variant: \"body1\",\n    },\n    {\n      name: \"QA & Testing Consulting\",\n      link: \"/android-development\",\n      activeIndex: 1,\n      selectedIndex: 21,\n      variant: \"body1\",\n    },\n  ];\n\n  const menuOSOptions = [\n    {\n      name: \"Outsourcing Services\",\n      link: \"/android-development\",\n      activeIndex: 1,\n      selectedIndex: 22,\n      variant: \"h4\",\n    },\n    {\n      name: \"Outsource Softare Development\",\n      link: \"/android-development\",\n      activeIndex: 1,\n      selectedIndex: 23,\n      variant: \"body1\",\n    },\n    {\n      name: \"Outsource Web Development\",\n      link: \"/android-development\",\n      activeIndex: 1,\n      selectedIndex: 24,\n      variant: \"body1\",\n    },\n    {\n      name: \"Outsource Mobile App Development\",\n      link: \"/android-development\",\n      activeIndex: 1,\n      selectedIndex: 25,\n      variant: \"body1\",\n    },\n    {\n      name: \"Outsource Web Design\",\n      link: \"/android-development\",\n      activeIndex: 1,\n      selectedIndex: 26,\n      variant: \"body1\",\n    },\n    {\n      name: \"Outsource Softare Testing\",\n      link: \"/android-development\",\n      activeIndex: 1,\n      selectedIndex: 27,\n      variant: \"body1\",\n    },\n  ];\n\n  const allMenuOptions = [\n    ...menuOptions,\n    ...menuUIOptions,\n    ...menuQAOptions,\n    ...menuConsultingOptions,\n    ...menuOSOptions,\n  ];\n\n  const routes = [\n    { name: \"HOME\", link: \"/\", activeIndex: 0 },\n    {\n      name: \"SERVICES\",\n      // link: \"/services\",\n      activeIndex: 1,\n      ariaOwns: anchorEl ? \"simple-menu\" : undefined,\n      ariaPopup: anchorEl ? \"true\" : undefined,\n      mouseOver: (event) => handleClick(event),\n    },\n    {\n      name: \"TECHNOLOGIES\",\n      // link: \"/technologies\",\n      activeIndex: 2,\n      ariaOwns: anchorEl ? \"technology-menu\" : undefined,\n      ariaPopup: anchorEl ? \"true\" : undefined,\n      mouseOver: (event) => handleTechClick(event),\n    },\n    { name: \"PORTFOLIO\", link: \"/portfolio\", activeIndex: 3 },\n    { name: \"BLOG\", link: \"/blog\", activeIndex: 4 },\n    { name: \"CAREERS\", link: \"/careers\", activeIndex: 5 },\n    { name: \"ABOUT US\", link: \"/about\", activeIndex: 6 },\n  ];\n\n  useEffect(() => {\n    [...allMenuOptions, ...routes].forEach((route) => {\n      switch (window.location.pathname) {\n        case `${route.link}`:\n          if (value !== route.activeIndex) {\n            setValue(route.activeIndex);\n            if (route.selectedIndex && route.selectedIndex !== selectedIndex) {\n              setSelectedIndex(route.selectedIndex);\n            }\n          }\n          break;\n        default:\n          break;\n      }\n    });\n  }, [\n    value,\n    allMenuOptions,\n    menuOptions,\n    menuConsultingOptions,\n    menuOSOptions,\n    menuQAOptions,\n    menuUIOptions,\n    selectedIndex,\n    routes,\n  ]);\n\n  const handleChange = (e, newValue) => {\n    setValue(newValue);\n  };\n\n  function handleClick(e) {\n    setAnchorEl(e.currentTarget);\n    setOpenMenu(true);\n  }\n\n  function handleTechClick(e) {\n    setAnchorTechEl(e.currentTarget);\n    setOpenTechMenu(true);\n  }\n\n  const handleClose = (e) => {\n    setAnchorEl(null);\n    setOpenMenu(false);\n  };\n\n  const handleTechClose = (e) => {\n    setAnchorTechEl(null);\n    setOpenTechMenu(false);\n  };\n\n  const handleMenuItemClick = (e, index) => {\n    setAnchorEl(null);\n    setOpenMenu(false);\n    setSelectedIndex(index);\n  };\n\n  const tabs = (\n    <Fragment>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        indicatorColor=\"primary\"\n        className={classes.tabContainer}\n      >\n        {routes.map((route, index) => (\n          <Tab\n            key={`${route}${index}`}\n            className={classes.tab}\n            component={Link}\n            to={route.link}\n            label={route.name}\n            aria-owns={route.ariaOwns}\n            aria-haspopup={route.ariaPopup}\n            onMouseOver={route.mouseOver}\n          />\n        ))}\n        <Tab\n          icon={<SearchIcon />}\n          aria-label=\"Search\"\n          className={classes.tab}\n        />\n        <Grid item container alignItems=\"center\" justify=\"center\">\n          <Button className={classes.contactBtn}>CONTACT US</Button>\n        </Grid>\n        <img src={englishFlage} alt=\"english flage\" className={classes.flage} />\n        <img\n          src={swedenFlage}\n          alt=\"Sweden flage\"\n          className={classes.flage}\n          style={{ marginRight: 35 }}\n        />\n      </Tabs>\n      {/* services menu  */}\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        open={openMenu}\n        onClick={handleClose}\n        MenuListProps={{ onMouseLeave: handleClose }}\n        classes={{ paper: classes.menu }}\n        elevation={0}\n        style={{ zIndex: 1302 }}\n        keepMounted\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        <Grid\n          container\n          className={classes.menuGrid}\n          direction=\"row\"\n          style={{ backgroundColor: \"#fff\" }}\n        >\n          <Grid item style={{ marginLeft: \"1em\" }} lg>\n            {menuOptions.map((option, index) => (\n              <MenuItem\n                key={`${option}${index}`}\n                onClick={(event) => {\n                  handleMenuItemClick(event, option.selectedIndex);\n                  setValue(1);\n                  handleClose();\n                }}\n                selected={index === selectedIndex && value === 1}\n                component={Link}\n                to={option.link}\n                classes={{ root: classes.menuItem }}\n              >\n                <Typography variant={option.variant}>{option.name}</Typography>\n              </MenuItem>\n            ))}\n          </Grid>\n          <Grid item style={{ marginLeft: \"1em\" }} lg>\n            {menuUIOptions.map((option, index) => (\n              <MenuItem\n                key={`${option}${index}`}\n                onClick={(event) => {\n                  handleMenuItemClick(event, option.selectedIndex);\n                  setValue(1);\n                  handleClose();\n                }}\n                selected={index === selectedIndex && value === 1}\n                component={Link}\n                to={option.link}\n                classes={{ root: classes.menuItem }}\n              >\n                <Typography variant={option.variant}>{option.name}</Typography>\n              </MenuItem>\n            ))}\n          </Grid>\n          <Grid item style={{ marginLeft: \"1em\" }} lg>\n            {menuQAOptions.map((option, index) => (\n              <MenuItem\n                key={`${option}${index}`}\n                onClick={(event) => {\n                  handleMenuItemClick(event, option.selectedIndex);\n                  setValue(1);\n                  handleClose();\n                }}\n                selected={index === selectedIndex && value === 1}\n                component={Link}\n                to={option.link}\n                classes={{ root: classes.menuItem }}\n              >\n                <Typography variant={option.variant}>{option.name}</Typography>\n              </MenuItem>\n            ))}\n          </Grid>\n          <Grid item style={{ marginLeft: \"1em\" }} lg>\n            {menuConsultingOptions.map((option, index) => (\n              <MenuItem\n                key={`${option}${index}`}\n                onClick={(event) => {\n                  handleMenuItemClick(event, option.selectedIndex);\n                  setValue(1);\n                  handleClose();\n                }}\n                selected={index === selectedIndex && value === 1}\n                component={Link}\n                to={option.link}\n                classes={{ root: classes.menuItem }}\n              >\n                <Typography variant={option.variant}>{option.name}</Typography>\n              </MenuItem>\n            ))}\n          </Grid>\n          <Grid item style={{ marginLeft: \"1em\" }} lg>\n            {menuOSOptions.map((option, index) => (\n              <MenuItem\n                key={`${option}${index}`}\n                onClick={(event) => {\n                  handleMenuItemClick(event, option.selectedIndex);\n                  setValue(1);\n                  handleClose();\n                }}\n                selected={index === selectedIndex && value === 1}\n                component={Link}\n                to={option.link}\n                classes={{ root: classes.menuItem }}\n              >\n                <Typography variant={option.variant}>{option.name}</Typography>\n              </MenuItem>\n            ))}\n          </Grid>\n        </Grid>\n      </Menu>\n      {/* technology menus */}\n      <Menu\n        id=\"technology-menu\"\n        anchorEl={anchorTechEl}\n        open={openTechMenu}\n        onClick={handleTechClose}\n        MenuListProps={{ onMouseLeave: handleTechClose }}\n        classes={{ paper: classes.menu }}\n        elevation={0}\n        style={{ zIndex: 1302 }}\n        keepMounted\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        <Grid\n          container\n          className={classes.menuGrid}\n          direction=\"row\"\n          style={{ backgroundColor: \"#fff\" }}\n        >\n          <Grid item style={{ marginLeft: \"2em\" }} lg>\n            <Typography className={classes.tabMenuItem} variant=\"h4\">\n              BACK-END TECHNOLOGIES\n            </Typography>\n            <Typography className={classes.tabMenuItem} variant=\"body1\">\n              Python\n            </Typography>\n            <Typography className={classes.tabMenuItem} variant=\"body1\">\n              C#/.NET Development\n            </Typography>\n            <Typography className={classes.tabMenuItem} variant=\"body1\">\n              PHP\n            </Typography>\n            <Typography className={classes.tabMenuItem} variant=\"body1\">\n              Node.js\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Grid item container direction=\"column\">\n              <Grid item>\n                <Typography\n                  variant=\"h4\"\n                  style={{ paddingLeft: 60, marginBottom: \"1em\" }}\n                >\n                  FRONTEND-END TECHNOLOGIES\n                </Typography>\n              </Grid>\n              <Grid item container>\n                <Grid item style={{ marginLeft: \"2em\" }} lg>\n                  <Typography className={classes.tabMenuItem} variant=\"h4\">\n                    Web Technologies\n                  </Typography>\n                  <Typography className={classes.tabMenuItem} variant=\"body1\">\n                    JavaScript Development\n                  </Typography>\n                  <Typography className={classes.tabMenuItem} variant=\"body1\">\n                    Angular\n                  </Typography>\n                  <Typography className={classes.tabMenuItem} variant=\"body1\">\n                    React.js\n                  </Typography>\n                </Grid>\n                <Grid item style={{ marginLeft: \"2em\", marginRight: \"6em\" }} lg>\n                  <Typography className={classes.tabMenuItem} variant=\"h4\">\n                    Mobile Technologies\n                  </Typography>\n                  <Typography className={classes.tabMenuItem} variant=\"body1\">\n                    Progressive Web App Development\n                  </Typography>\n                  <Typography className={classes.tabMenuItem} variant=\"body1\">\n                    React Native App Development\n                  </Typography>\n                  <Typography className={classes.tabMenuItem} variant=\"body1\">\n                    Native App Development\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Menu>\n    </Fragment>\n  );\n\n  const drawer = (\n    <Fragment>\n      <SwipeableDrawer\n        disableBackdropTransition={!iOS}\n        disableDiscovery={iOS}\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n        onOpen={() => setOpenDrawer(true)}\n        classes={{ paper: classes.drawer }}\n      >\n        <div className={classes.toolbarMargin} />\n        <List disablePadding>\n          {routes.map((route) => (\n            <ListItem\n              key={`${route}${route.activeIndex}`}\n              onClick={\n                route.name === \"SERVICES\"\n                  ? undefined\n                  : () => {\n                      setOpenDrawer(false);\n                      setValue(route.activeIndex);\n                    }\n              }\n              divider\n              button\n              component={Link}\n              to={route.link}\n              selected={value === route.activeIndex}\n              classes={{ selected: classes.drawerItemSelected }}\n              style={{\n                backgroundColor: theme.palette.common.blue,\n                boxShadow: 0,\n                borderRadius: \"none\",\n              }}\n            >\n              <ListItemText disableTypography className={classes.drawerItem}>\n                {route.name === \"SERVICES\" ? (\n                  <Accordion>\n                    <AccordionSummary\n                      expandIcon={<ExpandMoreIcon />}\n                      aria-controls=\"panel1a-content\"\n                      id=\"panel1a-header\"\n                      style={{\n                        backgroundColor: theme.palette.common.blue,\n                        padding: 0,\n                      }}\n                    >\n                      <Typography\n                        variant=\"tab\"\n                        style={{ color: \"#fff\", marginTop: 0 }}\n                      >\n                        {route.name}\n                      </Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                      <Grid item container direction=\"column\">\n                        {allMenuOptions.map((item, index) => (\n                          <Grid\n                            item\n                            style={{ maxWidth: \"14em\", marginTop: \"1em\" }}\n                          >\n                            <Typography\n                              key={index}\n                              variant={item.variant}\n                              selected={index === selectedIndex && value === 1}\n                              component={Link}\n                              to={item.link}\n                              onClick={() => {\n                                setOpenDrawer(false);\n                                setValue(route.activeIndex);\n                              }}\n                            >\n                              {item.name}\n                            </Typography>\n                          </Grid>\n                        ))}\n                      </Grid>\n                    </AccordionDetails>\n                  </Accordion>\n                ) : (\n                  route.name\n                )}\n              </ListItemText>\n            </ListItem>\n          ))}\n        </List>\n      </SwipeableDrawer>\n      <IconButton\n        className={classes.drawerIconContainer}\n        onClick={() => setOpenDrawer(!openDrawer)}\n        disableRipple\n      >\n        <MenuIcon className={classes.drawerIcon} />\n      </IconButton>\n    </Fragment>\n  );\n\n  return (\n    <Fragment>\n      <ElevationScroll>\n        <AppBar position=\"fixed\" color=\"inherit\" className={classes.appbar}>\n          <Toolbar disableGutters>\n            <Button\n              className={classes.logoContainer}\n              component={Link}\n              to=\"/\"\n              disableRipple\n              onClick={() => setValue(0)}\n            >\n              <img src={logo} className={classes.logo} alt=\"Company Logo\" />\n            </Button>\n            {matches ? drawer : tabs}\n          </Toolbar>\n        </AppBar>\n      </ElevationScroll>\n    </Fragment>\n  );\n}\n","/Users/najib/Cloud-Native/bootcamp2020/React-Material-UI/techtron/src/components/ui/Theme.js",[],"/Users/najib/Cloud-Native/bootcamp2020/React-Material-UI/techtron/src/reportWebVitals.js",[],["56","57"],"/Users/najib/Cloud-Native/bootcamp2020/React-Material-UI/techtron/src/components/ui/footer/LetsTalk.js",["58","59","60","61","62"],"/Users/najib/Cloud-Native/bootcamp2020/React-Material-UI/techtron/src/components/ui/footer/Footer.js",["63","64","65","66"],"/Users/najib/Cloud-Native/bootcamp2020/React-Material-UI/techtron/src/pages/Home.js",["67"],"/Users/najib/Cloud-Native/bootcamp2020/React-Material-UI/techtron/src/components/ui/HomePage/HeroSection.js",["68","69","70","71","72","73","74"],"/Users/najib/Cloud-Native/bootcamp2020/React-Material-UI/techtron/src/components/ui/HomePage/HeroSliderLanguges.js",["75","76","77","78"],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"79","replacedBy":"83"},{"ruleId":"81","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":25,"column":3,"nodeType":"87","messageId":"88","endLine":25,"endColumn":9},{"ruleId":"89","severity":1,"message":"90","line":453,"column":6,"nodeType":"91","endLine":463,"endColumn":4,"suggestions":"92"},{"ruleId":"79","replacedBy":"93"},{"ruleId":"81","replacedBy":"94"},{"ruleId":"85","severity":1,"message":"95","line":2,"column":10,"nodeType":"87","messageId":"88","endLine":2,"endColumn":14},{"ruleId":"85","severity":1,"message":"86","line":11,"column":3,"nodeType":"87","messageId":"88","endLine":11,"endColumn":9},{"ruleId":"85","severity":1,"message":"96","line":19,"column":8,"nodeType":"87","messageId":"88","endLine":19,"endColumn":13},{"ruleId":"85","severity":1,"message":"97","line":98,"column":9,"nodeType":"87","messageId":"88","endLine":98,"endColumn":18},{"ruleId":"85","severity":1,"message":"98","line":100,"column":9,"nodeType":"87","messageId":"88","endLine":100,"endColumn":18},{"ruleId":"85","severity":1,"message":"99","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"85","severity":1,"message":"95","line":2,"column":10,"nodeType":"87","messageId":"88","endLine":2,"endColumn":14},{"ruleId":"85","severity":1,"message":"100","line":10,"column":3,"nodeType":"87","messageId":"88","endLine":10,"endColumn":12},{"ruleId":"85","severity":1,"message":"96","line":13,"column":8,"nodeType":"87","messageId":"88","endLine":13,"endColumn":13},{"ruleId":"85","severity":1,"message":"101","line":9,"column":3,"nodeType":"87","messageId":"88","endLine":9,"endColumn":13},{"ruleId":"85","severity":1,"message":"99","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"85","severity":1,"message":"95","line":2,"column":10,"nodeType":"87","messageId":"88","endLine":2,"endColumn":14},{"ruleId":"85","severity":1,"message":"102","line":7,"column":3,"nodeType":"87","messageId":"88","endLine":7,"endColumn":9},{"ruleId":"85","severity":1,"message":"100","line":10,"column":3,"nodeType":"87","messageId":"88","endLine":10,"endColumn":12},{"ruleId":"85","severity":1,"message":"86","line":11,"column":3,"nodeType":"87","messageId":"88","endLine":11,"endColumn":9},{"ruleId":"85","severity":1,"message":"103","line":47,"column":9,"nodeType":"87","messageId":"88","endLine":47,"endColumn":18},{"ruleId":"85","severity":1,"message":"98","line":48,"column":9,"nodeType":"87","messageId":"88","endLine":48,"endColumn":18},{"ruleId":"85","severity":1,"message":"104","line":6,"column":8,"nodeType":"87","messageId":"88","endLine":6,"endColumn":23},{"ruleId":"85","severity":1,"message":"105","line":9,"column":8,"nodeType":"87","messageId":"88","endLine":9,"endColumn":18},{"ruleId":"85","severity":1,"message":"106","line":10,"column":8,"nodeType":"87","messageId":"88","endLine":10,"endColumn":22},{"ruleId":"85","severity":1,"message":"96","line":19,"column":8,"nodeType":"87","messageId":"88","endLine":19,"endColumn":13},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],["107"],["108"],"no-unused-vars","'Avatar' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setSelectedIndex' and 'setValue'. Either include them or remove the dependency array. If 'setValue' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["109"],["107"],["108"],"'Link' is defined but never used.","'theme' is defined but never used.","'matchesSM' is assigned a value but never used.","'matchesLG' is assigned a value but never used.","'useState' is defined but never used.","'TextField' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'matchesMD' is assigned a value but never used.","'GridListTileBar' is defined but never used.","'IconButton' is defined but never used.","'StarBorderIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},"Update the dependencies array to be: [value, allMenuOptions, menuOptions, menuConsultingOptions, menuOSOptions, menuQAOptions, menuUIOptions, selectedIndex, routes, setValue, setSelectedIndex]",{"range":"112","text":"113"},[10031,10199],"[value, allMenuOptions, menuOptions, menuConsultingOptions, menuOSOptions, menuQAOptions, menuUIOptions, selectedIndex, routes, setValue, setSelectedIndex]"]